# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Recipe {
  id: ID!
  title: String!
  description: String
  creationDate: Date!
  ingredients: [String!]!
}

"""Date custom scalar type"""
scalar Date

type Query {
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: [UserOrderByInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, distinct: [UserDistinctFieldEnum!]): [User!]!
  aggregateUser(where: UserWhereInput, orderBy: [UserOrderByInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, distinct: [UserDistinctFieldEnum!]): AggregateUser!
  recipe(id: String!): Recipe!
  recipes(skip: Int = 0, take: Int = 25): [Recipe!]!
}

type User {
  id: Int!
  email: String!
  username: String
  password: String!
  firstName: String
  lastName: String
  lastLogin: Date!
  isSuperuser: Boolean!
  isStaff: Boolean!
  isActive: Boolean!
  dateJoined: Date!
  dateOfBirth: Date
}

input UserWhereUniqueInput {
  id: Int
  email: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IntFilter
  email: StringFilter
  username: StringNullableFilter
  password: StringFilter
  firstName: StringNullableFilter
  lastName: StringNullableFilter
  lastLogin: DateTimeFilter
  isSuperuser: BoolFilter
  isStaff: BoolFilter
  isActive: BoolFilter
  dateJoined: DateTimeFilter
  dateOfBirth: DateTimeNullableFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input DateTimeFilter {
  equals: Date
  in: [Date!]
  notIn: [Date!]
  lt: Date
  lte: Date
  gt: Date
  gte: Date
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: Date
  in: [Date!]
  notIn: [Date!]
  lt: Date
  lte: Date
  gt: Date
  gte: Date
  not: NestedDateTimeFilter
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input DateTimeNullableFilter {
  equals: Date
  in: [Date!]
  notIn: [Date!]
  lt: Date
  lte: Date
  gt: Date
  gte: Date
  not: NestedDateTimeNullableFilter
}

input NestedDateTimeNullableFilter {
  equals: Date
  in: [Date!]
  notIn: [Date!]
  lt: Date
  lte: Date
  gt: Date
  gte: Date
  not: NestedDateTimeNullableFilter
}

input UserOrderByInput {
  id: SortOrder
  email: SortOrder
  username: SortOrder
  password: SortOrder
  firstName: SortOrder
  lastName: SortOrder
  lastLogin: SortOrder
  isSuperuser: SortOrder
  isStaff: SortOrder
  isActive: SortOrder
  dateJoined: SortOrder
  dateOfBirth: SortOrder
}

enum SortOrder {
  asc
  desc
}

enum UserDistinctFieldEnum {
  id
  email
  username
  password
  firstName
  lastName
  lastLogin
  isSuperuser
  isStaff
  isActive
  dateJoined
  dateOfBirth
}

type AggregateUser {
  count: Int!
  avg: UserAvgAggregateOutputType
  sum: UserSumAggregateOutputType
  min: UserMinAggregateOutputType
  max: UserMaxAggregateOutputType
}

type UserAvgAggregateOutputType {
  id: Float!
}

type UserSumAggregateOutputType {
  id: Int!
}

type UserMinAggregateOutputType {
  id: Int!
}

type UserMaxAggregateOutputType {
  id: Int!
}

type Mutation {
  createUser(data: UserCreateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteManyUser(where: UserWhereInput): BatchPayload!
  updateManyUser(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  addRecipe(newRecipeData: NewRecipeInput!): Recipe!
  removeRecipe(id: String!): Boolean!
}

input UserCreateInput {
  email: String!
  username: String
  password: String!
  firstName: String
  lastName: String
  lastLogin: Date
  isSuperuser: Boolean
  isStaff: Boolean
  isActive: Boolean
  dateJoined: Date
  dateOfBirth: Date
}

input UserUpdateInput {
  email: StringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  lastLogin: DateTimeFieldUpdateOperationsInput
  isSuperuser: BoolFieldUpdateOperationsInput
  isStaff: BoolFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  dateJoined: DateTimeFieldUpdateOperationsInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
}

input StringFieldUpdateOperationsInput {
  set: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input DateTimeFieldUpdateOperationsInput {
  set: Date
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: Date
}

type BatchPayload {
  count: Int!
}

input UserUpdateManyMutationInput {
  email: StringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  lastLogin: DateTimeFieldUpdateOperationsInput
  isSuperuser: BoolFieldUpdateOperationsInput
  isStaff: BoolFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  dateJoined: DateTimeFieldUpdateOperationsInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
}

input NewRecipeInput {
  title: String!
  description: String
  ingredients: [String!]!
}

type Subscription {
  recipeAdded: Recipe!
}
